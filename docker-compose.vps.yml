version: '3.8'

services:
  # PostgreSQL Database (Optional - remove if using SQLite)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: telegram_sender
      POSTGRES_USER: telegram_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - telegram-net
    ports:
      - '127.0.0.1:5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U telegram_user -d telegram_sender']
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.vps
    env_file:
      - config/config.env.prod
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://telegram_user:secure_password_change_me@postgres:5432/telegram_sender}
    ports:
      - '8000:8000'
    volumes:
      - ./sessions:/app/sessions
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
    restart: unless-stopped
    networks:
      - telegram-net
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  telegram-net:
    driver: bridge
