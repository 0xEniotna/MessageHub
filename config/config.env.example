# Telegram Sender Configuration - EXAMPLE FILE
# Copy this to config.env and fill in your actual values
# DO NOT commit config.env to version control!

# Security Keys (Generate new ones for production!)
SECRET_KEY=your-super-secure-32-char-secret-key-here
ENCRYPTION_KEY=your-fernet-encryption-key-here

# Telegram API Credentials (Get from https://my.telegram.org)
API_ID=your_telegram_api_id
API_HASH=your_telegram_api_hash

# Flask Configuration
FLASK_ENV=development
FLASK_DEBUG=1
HOST=0.0.0.0
PORT=8000

# Database Configuration
# Option 1: SQLite (Simple, good for development)
DATABASE_URL=sqlite:///data/telegram_sender.db

# Option 2: PostgreSQL (Better for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/telegram_sender

# CORS Configuration (Update with your frontend URLs)
CORS_ORIGINS=http://localhost:3000,https://your-frontend-domain.com

# Rate Limiting
RATE_LIMIT_PER_MINUTE=30
MAX_RECIPIENTS_PER_MESSAGE=100
SESSION_TIMEOUT_HOURS=24

# Logging
LOG_LEVEL=INFO
LOG_FILE=logs/telegram_sender.log

# Security Headers
SECURE_HEADERS=true

# File Upload Limits
MAX_FILE_SIZE_MB=10
ALLOWED_FILE_TYPES=png,jpg,jpeg,gif,webp

# Generate secure keys with these commands:
# SECRET_KEY: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
# ENCRYPTION_KEY: python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"

# For Production Database (Railway/Heroku will set this automatically)
POSTGRES_PASSWORD=your-postgres-password

# Optional: Redis for sessions (recommended for production)
# REDIS_URL=redis://localhost:6379/0

# Optional: Email notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# ADMIN_EMAIL=admin@yourdomain.com

# Your phone number (with country code, e.g., +1234567890)
PHONE_NUMBER=your_phone_number_here 